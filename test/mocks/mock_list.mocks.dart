// Mocks generated by Mockito 5.2.0 from annotations
// in enerbit_prueba/test/mocks/mock_list.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:dio/dio.dart' as _i10;
import 'package:enerbit_prueba/src/models/basefailure/basefailure.dart' as _i5;
import 'package:enerbit_prueba/src/models/characters/characters_response.dart'
    as _i6;
import 'package:enerbit_prueba/src/models/episodies/episodie.dart' as _i8;
import 'package:enerbit_prueba/src/repositories/characters_repository.dart'
    as _i9;
import 'package:enerbit_prueba/src/services/characters_service.dart' as _i3;
import 'package:enerbit_prueba/src/services/episodies_service.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [CharactersService].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharactersService extends _i1.Mock implements _i3.CharactersService {
  MockCharactersService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.BaseFailure, _i6.CharactersResponse>> fetchNext(
          {String? nextPage, String? searchTerm}) =>
      (super.noSuchMethod(
          Invocation.method(
              #fetchNext, [], {#nextPage: nextPage, #searchTerm: searchTerm}),
          returnValue:
              Future<_i2.Either<_i5.BaseFailure, _i6.CharactersResponse>>.value(
                  _FakeEither_0<_i5.BaseFailure, _i6.CharactersResponse>())) as _i4
          .Future<_i2.Either<_i5.BaseFailure, _i6.CharactersResponse>>);
}

/// A class which mocks [EpisodieService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEpisodieService extends _i1.Mock implements _i7.EpisodieService {
  MockEpisodieService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.BaseFailure, _i8.Episodie>> getSingleEpisode(
          {String? episodeUrl}) =>
      (super.noSuchMethod(
          Invocation.method(#getSingleEpisode, [], {#episodeUrl: episodeUrl}),
          returnValue: Future<_i2.Either<_i5.BaseFailure, _i8.Episodie>>.value(
              _FakeEither_0<_i5.BaseFailure, _i8.Episodie>())) as _i4
          .Future<_i2.Either<_i5.BaseFailure, _i8.Episodie>>);
}

/// A class which mocks [CharactersRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharactersRepository extends _i1.Mock
    implements _i9.CharactersRepository {
  MockCharactersRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.BaseFailure, _i10.Response<Map<String, dynamic>>>> fetchNext(
          {Map<String, dynamic>? queryParameters, String? nextPage}) =>
      (super.noSuchMethod(
          Invocation.method(#fetchNext, [],
              {#queryParameters: queryParameters, #nextPage: nextPage}),
          returnValue:
              Future<_i2.Either<_i5.BaseFailure, _i10.Response<Map<String, dynamic>>>>.value(
                  _FakeEither_0<_i5.BaseFailure, _i10.Response<Map<String, dynamic>>>())) as _i4
          .Future<_i2.Either<_i5.BaseFailure, _i10.Response<Map<String, dynamic>>>>);
}
